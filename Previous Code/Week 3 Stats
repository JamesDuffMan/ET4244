//code to test stats

#include <SPI.h>
#include <Wire.h>
#include <Adafruit_GFX.h>
#include <Adafruit_SH1106.h>
#include <Adafruit_Sensor.h>
#include <Adafruit_BME280.h>

// If using software SPI (the default case):
#define OLED_MOSI   9
#define OLED_CLK   10
#define OLED_DC    11
#define OLED_CS    12
#define OLED_RESET 8
Adafruit_SH1106 display(OLED_MOSI, OLED_CLK, OLED_DC, OLED_RESET, OLED_CS);
// 'handshake', 109x64px
const unsigned char logo [] PROGMEM = {
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x38, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x2c, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x2b, 0xc0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0xe0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x70, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1e, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x3c, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x78, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0e, 
  0x00, 0x00, 0x00, 0xf0, 0x00, 0x00, 0xe0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x07, 0x80, 0x00, 
  0x79, 0xfc, 0x00, 0x07, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0xc0, 0x07, 0x89, 0x0f, 
  0x00, 0x0f, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x06, 0x70, 0x0c, 0x8d, 0x83, 0xc0, 0x3a, 
  0x80, 0x00, 0x00, 0x00, 0x00, 0x20, 0x00, 0x0c, 0x21, 0x7c, 0x1c, 0xc1, 0xf8, 0x71, 0x80, 0x00, 
  0x00, 0x00, 0x00, 0x30, 0x00, 0x08, 0x17, 0xe0, 0x18, 0xe0, 0x7f, 0x40, 0x80, 0x00, 0x00, 0x00, 
  0x00, 0x18, 0x00, 0x18, 0x38, 0x80, 0x30, 0x60, 0x17, 0x40, 0xc0, 0x00, 0x00, 0x00, 0x00, 0x0c, 
  0x00, 0x30, 0x60, 0x03, 0x60, 0x78, 0x00, 0xe0, 0xc0, 0x00, 0x00, 0x00, 0x00, 0x06, 0x00, 0x20, 
  0x70, 0x0d, 0x80, 0x0c, 0x00, 0x60, 0x60, 0x00, 0x00, 0x00, 0x00, 0x07, 0x00, 0x60, 0xc0, 0x0c, 
  0x00, 0x0c, 0x00, 0x70, 0x20, 0x00, 0x00, 0x00, 0x00, 0x03, 0x80, 0xc1, 0xc0, 0x1e, 0x00, 0x0e, 
  0x00, 0x30, 0x30, 0x00, 0x40, 0x00, 0x00, 0x01, 0xc1, 0x81, 0x80, 0x0e, 0x00, 0x1e, 0x00, 0x18, 
  0x38, 0x00, 0xc0, 0x00, 0x00, 0x00, 0xe1, 0x03, 0x00, 0x03, 0x80, 0x70, 0x00, 0x18, 0x0e, 0x01, 
  0x80, 0x00, 0x00, 0x00, 0x73, 0x07, 0x00, 0x01, 0xe1, 0xe0, 0x00, 0x1c, 0x07, 0x03, 0x00, 0x00, 
  0x00, 0x00, 0x76, 0x06, 0x00, 0x00, 0x7f, 0x80, 0x00, 0x0c, 0x03, 0x9e, 0x00, 0x00, 0x00, 0x00, 
  0x3c, 0x0c, 0x00, 0x00, 0x3e, 0x00, 0x00, 0x06, 0x00, 0x78, 0x00, 0x00, 0x00, 0x00, 0x1e, 0x1c, 
  0x00, 0x00, 0xf8, 0x00, 0x00, 0x06, 0x07, 0xf0, 0x00, 0x00, 0x00, 0x00, 0x07, 0x1c, 0x00, 0x02, 
  0xe0, 0x00, 0x00, 0x07, 0x03, 0xe0, 0x00, 0x00, 0x00, 0x00, 0x03, 0xb0, 0x00, 0x07, 0x81, 0x70, 
  0x00, 0x03, 0x07, 0x80, 0x00, 0x00, 0x00, 0x00, 0x01, 0xe0, 0x00, 0x0e, 0x03, 0xe0, 0x00, 0x01, 
  0x9c, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x38, 0x00, 0x18, 0x0f, 0x80, 0x00, 0x01, 0xf8, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x30, 0x00, 0x1c, 0x1c, 0x08, 0x00, 0x01, 0xe0, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x10, 0x00, 0x18, 0xf0, 0x1c, 0x00, 0x03, 0xc0, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x1c, 0x00, 0x1b, 0xe0, 0x78, 0x00, 0x03, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0e, 
  0x00, 0x0f, 0x81, 0xe0, 0x00, 0x06, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x07, 0x80, 0x0c, 
  0x03, 0xc0, 0x00, 0x0e, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0xc0, 0x08, 0x1f, 0x02, 
  0x00, 0x78, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xf0, 0x18, 0x3c, 0x0f, 0x02, 0xe0, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x38, 0x1c, 0xf0, 0x1e, 0x07, 0xc0, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1e, 0x0f, 0xc0, 0x78, 0x1f, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x07, 0x03, 0x01, 0xe0, 0x5c, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x03, 0xc3, 0x0f, 0x80, 0xf0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x01, 0xe3, 0x1e, 0x03, 0xc0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x71, 
  0x78, 0x1f, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3d, 0xf0, 0x3c, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0e, 0x18, 0xf0, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0x9f, 0xc0, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0xcf, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xf0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x01, 0xfc, 0xff, 0x7e, 0x1f, 0xd8, 0x67, 0xf3, 0xf1, 0xfc, 0xc3, 0x7f, 
  0xbf, 0x00, 0x01, 0xfc, 0xff, 0x7f, 0x1f, 0xdc, 0x67, 0xf3, 0xf9, 0xfc, 0xc3, 0x7f, 0xbf, 0x80, 
  0x01, 0x8c, 0xc3, 0x63, 0x06, 0x1e, 0x66, 0x03, 0x0d, 0x80, 0xc3, 0x0c, 0x30, 0xc0, 0x01, 0xfc, 
  0xff, 0x7e, 0x06, 0x1b, 0x67, 0x83, 0xfd, 0xfc, 0xff, 0x0c, 0x3f, 0xc0, 0x01, 0x80, 0xff, 0x66, 
  0x06, 0x19, 0xe7, 0x83, 0x39, 0xfc, 0xff, 0x0c, 0x3f, 0x80, 0x01, 0x80, 0xc3, 0x63, 0x06, 0x18, 
  0xe6, 0x03, 0x18, 0x0c, 0xc3, 0x0c, 0x30, 0x00, 0x01, 0x80, 0xc3, 0x63, 0x86, 0x18, 0x67, 0xf3, 
  0x1d, 0xfc, 0xc3, 0x7f, 0x30, 0x00, 0x01, 0x80, 0xc3, 0x61, 0x86, 0x18, 0x67, 0xf3, 0x0d, 0xfc, 
  0xc3, 0x7f, 0x30, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
};




#define SEALEVELPRESSURE_HPA (1013.25)

Adafruit_BME280 bme;

#if (SH1106_LCDHEIGHT != 64)
#error("Height incorrect, please fix Adafruit_SH1106.h!");
#endif

void setup()   {                
  Serial.begin(9600);

  if (!bme.begin(0x76)) {
    Serial.println("Could not find a valid BME280 sensor, check wiring!");
    while (1);
  }
  
  // by default, we'll generate the high voltage from the 3.3v line internally! (neat!)
  display.begin(SH1106_SWITCHCAPVCC);
  display.clearDisplay(); // Make sure the display is cleared
  // Draw the bitmap:
  // drawBitmap(x position, y position, bitmap data, bitmap width, bitmap height, color)
  display.drawBitmap(0, 0, logo, 109, 64, WHITE);

  // Update the display
  display.display();
  delay(5000);
  

  text();
  
  
}


void loop() {

  
  
}

void text(void){

  static int i = 0;
  while(1) {
    display.clearDisplay();
  
  display.setTextSize(1);             // Normal 1:1 pixel scale
  display.setTextColor(WHITE);        // Draw white text
  display.setCursor(0,0);             // Start at top-left corner
  //display.print("Temp = ");
  display.print(bme.readTemperature());
  display.println("*C");
  display.println(" ");

  display.setCursor(74,0);
  //display.print("Pressure = ");
  display.print(bme.readPressure() / 100.0F);
  display.println("hPa");
  display.println(" ");

  display.setCursor(0,57);
  //display.print("Alt = ");
  display.print(bme.readAltitude(SEALEVELPRESSURE_HPA));
  display.println("m");
  display.println(" ");

  display.setCursor(88,57);
  //display.print("Hum. = ");
  display.print(bme.readHumidity());
  display.println("%");
  display.println(" ");

  display.display();
  delay(2000);
  }
  
}




